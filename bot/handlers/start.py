from aiogram import Router, types
from aiogram.filters import Command
from bot.db import db
import os
from aiogram.types import ChatJoinRequest
from aiogram.types.input_file import FSInputFile
import asyncio
router = Router()


async def get_menu_data(user_id: int):
    row = await db.fetchrow("SELECT quest_lvl FROM users WHERE telegram_id = $1", user_id)
    quest_lvl = row["quest_lvl"] if row else None
    photo = None

    if quest_lvl == 1:
        text = (
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ª–µ–≥–∫–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å!!\n\n"
            "üí∏ –•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å <b>200‚ÇΩ</b> –∑–∞ –ø–∞—Ä—É –º–∏–Ω—É—Ç? –¢–æ–≥–¥–∞ –ª–æ–≤–∏ —É—Å–ª–æ–≤–∏—è:\n\n"
            "1Ô∏è‚É£ <b>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –ø–æ —Å—Å—ã–ª–∫–µ: https://hassle.online/ref/Luis_Jerry</b>\n"
            "2Ô∏è‚É£ <b>–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–≤–æ–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!</b>\n\n"
            "<i>–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω–æ! –î–µ–π—Å—Ç–≤—É–π!</i>\n\n"
            "üìå <b>–ó–ê–ü–û–ú–ù–ò –î–ê–ù–ù–´–ï –æ—Ç –ê–ö–ö–ê–£–ù–¢–ê!! –ü–†–ò–ì–û–î–ò–¢–°–Ø –î–õ–Ø –ü–†–û–í–ï–†–ö–ò!!</b>"
        )
    else:
        text = (
            "üò≥ –û—Ö, —Ç—ã —Ö–æ—á–µ—à—å –≤ —Å—É–º–º–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å 600 —Ä—É–±–ª–µ–π? –ù—É –¥–µ—Ä–∂–∏!!\n\n"
            "<b>üìå –£—Å–ª–æ–≤–∏—è:</b>\n"
            "<blockquote>"
            "- –°–∫–∞—á–∞—Ç—å –∏–≥—Ä—É Hassle Online // Radmir RP (—Å—Å—ã–ª–∫–∏ –≤–Ω–∏–∑—É)\n\n"
            "- –ü—Ä–æ–∫–∞—á–∞—Ç—å –≤ –∏–≥—Ä–µ 3 —É—Ä–æ–≤–µ–Ω—å\n\n"
            "- –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω\n\n"
            "- –í–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É <code>/pcode</code> –∏ <code>#gang</code> <b>–ù–ê 8 –°–ï–†–í–ï–†–ï</b>\n"
            "</blockquote>\n"
            "<b>üì¢ –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É:</b> @vladimiras01\n\n"
            "üì• –û–Ω –ø—Ä–æ–≤–µ—Ä–∏—Ç –∏ –≤—ã–ø–ª–∞—Ç–∏—Ç –¥–µ–Ω—å–≥–∏, —Ç–æ–ª—å–∫–æ —Å–∫–∏–Ω—å –µ–º—É —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π\n\n"
            "üì≤ –°–∫–∞—á–∞—Ç—å –∏–≥—Ä—É –Ω–∞ Android: <a href='https://play.google.com/store/apps/details?id=com.hassle.online'>Google Play</a> (—Ç—ã–∫)\n"
            "üì∫ –°–∫–∞—á–∞—Ç—å –∏–≥—Ä—É –Ω–∞ iOS: <a href='https://apps.apple.com/us/app/hassle-online/id1624507378?l=ru'>App Store</a> (—Ç—ã–∫)\n"
            "üíª –°–∫–∞—á–∞—Ç—å –∏–≥—Ä—É –Ω–∞ –ü–ö: <a href='https://radmir.online/'>Radmir Online</a> (—Ç—ã–∫)\n\n"
            "–ñ–µ–ª–∞—é —É–¥–∞—á–∏!\n\n"
            "<b>‚≠ê –û–¢–ó–´–í–´ –û –í–´–ü–õ–ê–¢–ê–• 600–†:</b>\n https://t.me/otz_br600\n\n"
            "‚úÖ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª"
        )
        photo = os.path.join(os.path.dirname(__file__), '..', 'img', 'sber.jpg')

    keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(text="–í—ã–ø–ª–∞—Ç–∞", callback_data="payout"),
                types.InlineKeyboardButton(text="–û—Ç–∑—ã–≤—ã", callback_data="reviews"),
                types.InlineKeyboardButton(text="–ë–∞–ª–∞–Ω—Å", callback_data="balance"),
            ]
        ]
    )

    return text, keyboard, photo


@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await db.execute(
        "INSERT INTO users (telegram_id, username) VALUES ($1, $2) ON CONFLICT DO NOTHING",
        message.from_user.id, message.from_user.username
    )

    text, keyboard, photo = await get_menu_data(message.from_user.id)
    if photo:
        photo_file = FSInputFile(photo)
        await message.answer_photo(photo=photo_file, caption=text, disable_web_page_preview=True)
        await message.answer("–ú–µ–Ω—é", reply_markup=keyboard)
    else:
        await message.answer(text, reply_markup=keyboard, disable_web_page_preview=True)


@router.chat_join_request()
async def handle_join_request(event: ChatJoinRequest):
    # –û–¥–æ–±—Ä—è–µ–º –∑–∞—è–≤–∫—É
    print(f"New subscriber: { {event.from_user.id} }", flush=True)
    await event.bot.approve_chat_join_request(
        chat_id=event.chat.id,
        user_id=event.from_user.id
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    await db.execute(
        "INSERT INTO users (telegram_id, username) VALUES ($1, $2) ON CONFLICT DO NOTHING",
        event.from_user.id,
        event.from_user.username
    )

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–µ–Ω—é
    text, keyboard, photo = await get_menu_data(event.from_user.id)
    await asyncio.sleep(2)
    try:
        if photo:
            photo_file = FSInputFile(photo)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º
            await event.bot.send_photo(
                chat_id=event.from_user.id,
                photo=photo_file,
                caption=text
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            await event.bot.send_message(
                chat_id=event.from_user.id,
                text="–ú–µ–Ω—é",
                reply_markup=keyboard
            )
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            await event.bot.send_message(
                chat_id=event.from_user.id,
                text=text,
                reply_markup=keyboard,
                disable_web_page_preview=True
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@router.callback_query(lambda c: c.data == "reviews")
async def reviews_callback(call: types.CallbackQuery):
    await call.answer()
    await call.message.delete()

    menu_keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")]
        ]
    )
    user = await db.fetchrow("SELECT balance FROM users WHERE telegram_id = $1", call.from_user.id)
    value = user["balance"] if user else 0
    if value == 0:
        text = (
            "–ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ üëáüëá\n\n"
            "https://t.me/br_otz\n\n"
            "ü•≥ –£–∂–µ –¥–µ—Å—è—Ç–∫–∏ –ª—é–¥–µ–π –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏!! –ß–µ–º —Ç—ã —Ö—É–∂–µ? –î–µ–π—Å—Ç–≤—É–π!!"
        )
    else:
        text = (
            "–£–∂–µ –º–Ω–æ–≥–æ –ª—é–¥–µ–π –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç –Ω–∞—Å –ø–æ 600—Ä üëáüëá\n\n"
            "https://t.me/otz_br600\n\n"
            "–î–µ—Ä–∑–∞–π!!"
        )
    await call.message.answer(text, reply_markup=menu_keyboard)


@router.callback_query(lambda c: c.data == "balance")
async def balance_callback(call: types.CallbackQuery):
    user = await db.fetchrow("SELECT balance FROM users WHERE telegram_id = $1", call.from_user.id)
    value = user["balance"] if user else 0
    await call.answer()
    await call.message.delete()

    menu_keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")]
        ]
    )
    await call.message.answer(
        f"ü§© –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {value}‚ÇΩ.\n\n–î–ª—è –≤—ã–≤–æ–¥–∞ –¥–µ–Ω–µ–≥ –ø–µ—Ä–µ–π–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª '–í—ã–ø–ª–∞—Ç–∞'",
        reply_markup=menu_keyboard
    )


@router.callback_query(lambda c: c.data == "menu")
async def menu_callback(call: types.CallbackQuery):
    await call.answer()
    await call.message.delete()

    text, keyboard, photo = await get_menu_data(call.from_user.id)
    if photo:
        from aiogram.types.input_file import FSInputFile
        photo_file = FSInputFile(photo)
        await call.message.answer_photo(photo=photo_file, caption=text, disable_web_page_preview=True)
        await call.message.answer("–ú–µ–Ω—é", reply_markup=keyboard)
    else:
        await call.message.answer(text, reply_markup=keyboard, disable_web_page_preview=True)
